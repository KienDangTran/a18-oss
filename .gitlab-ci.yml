variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

cache:
  key: "$CI_COMMIT_REF_NAME"
  paths:
    - .gradle/caches/
    - .gradle/wrapper/

stages:
  - build
  - test
  - release
  - deploy
  - clean

build:
  stage: build
  script:
    - ./gradlew --build-cache -i clean assemble
  tags:
    - staging-runner

test:
  stage: test
  script: ./gradlew check
  tags:
    - staging-runner

release:
  stage: release
  script:
    - docker pull openjdk:11.0.3-slim-stretch
    - ./gradlew dockerSyncArchive dockerCreateDockerfile dockerBuildImage dockerPushImage
  allow_failure: true
  dependencies:
    - build
    - test
  only:
    - master
  tags:
    - staging-runner

deploy-staging:
  before_script:
    - docker network create -d overlay --subnet=192.168.1.0/24 --gateway=192.168.1.1 --opt com.docker.network.driver.mtu=9216 --opt encrypted=true proxy || true
  stage: deploy
  script:
    - docker login registry.gitlab.com
    - docker stack deploy -c docker/docker-cloud.app.staging.yml --prune --resolve-image always --with-registry-auth app_staging
  environment:
    name: staging
  dependencies:
    - build
    - test
  only:
    - master
  tags:
    - staging-runner

clean:
  stage: clean
  script:
    - docker container prune -f
    - docker image prune -f
    - docker volume prune -f
  allow_failure: true
  tags:
    - staging-runner

